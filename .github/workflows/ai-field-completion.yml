name: AI Field Completion

on:
  issues:
    types: [opened, edited]

jobs:
  complete-fields:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: pip install requests pyyaml

      - name: Fetch Issue Content
        id: fetch-issue
        run: |
          echo "Fetching issue content..."
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
            > issue.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Missing Fields with Azure AI
        id: generate-fields
        run: |
          python -c "
import os
import json
import requests

# Load the issue content
with open('issue.json', 'r') as f:
    issue = json.load(f)

# Extract the repository URL from the issue
repository_url = ''
for field in issue['body'].splitlines():
    if 'Repository URL:' in field:
        repository_url = field.split(':')[-1].strip()

# Azure OpenAI Service API endpoint and key
api_base = os.getenv('AZURE_OPENAI_ENDPOINT')
api_key = os.getenv('AZURE_OPENAI_API_KEY')
deployment_name = os.getenv('AZURE_OPENAI_DEPLOYMENT_NAME')

# Prompt for Azure AI
prompt = f'Generate a project name, description, potential contribution areas, required skills, and estimated time commitment for this repository: {repository_url}'

# Azure OpenAI API request
headers = {
    'Content-Type': 'application/json',
    'api-key': api_key
}
data = {
    'prompt': prompt,
    'max_tokens': 500,
    'temperature': 0.7
}
response = requests.post(
    f'{api_base}/openai/deployments/{deployment_name}/completions?api-version=2023-03-15-preview',
    headers=headers,
    json=data
)

# Parse the response and print the AI-generated content
result = response.json()
if 'choices' in result:
    generated_content = result['choices'][0]['text']
    print(generated_content)
else:
    print('Error:', result)
"
        env:
          AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_OPENAI_DEPLOYMENT_NAME: ${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}

      - name: Comment on Issue with AI-Generated Fields
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            -d '{"body": "Here are the AI-generated fields based on the repository URL provided:\n\n```markdown\n${{ steps.generate-fields.outputs.content }}\n```"}' \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
